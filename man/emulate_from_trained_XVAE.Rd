% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/XVAE_utils.R
\name{emulate_from_trained_XVAE}
\alias{emulate_from_trained_XVAE}
\title{Emulate Spatial Input Using Trained Weights and Biases from VAE}
\usage{
emulate_from_trained_XVAE()
}
\value{
A list with:
\itemize{
\item \code{emulations}: A matrix of simulated values for spatial inputs.
\item \code{theta_est}: A matrix of estimated parameters from the decoder.
}
}
\description{
This function emulates spatial inputs using trained weights and biases from the XVAE. Note weights and biases
have to be in the global environment.
It encodes input data, applies transformations, and decodes latent variables to generate simulations.
}
\details{
The function implements the following steps:
\enumerate{
\item \strong{Encoder for \( v_t \)}: Encodes spatial inputs into a latent representation.
\item \strong{Encoder for \( v_t' \)}: Encodes another input for transformation.
\item \strong{Laplace Transformation}: Activates latent variables using a Laplace transformation.
\item \strong{Re-parameterization Trick}: Generates stochastic latent variables.
\item \strong{Decoder}: Decodes latent variables to produce outputs.
}

The final outputs are simulated spatial data (\code{emulations}) and an estimated parameter (\code{theta_est}).
}
